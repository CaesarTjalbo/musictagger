1. == GENERAL ==
The purpose of this program is to change filenames and id3 tags from mp3s and flacs.

2. == WORKFLOW ==
After start up, the user is supposed to navigate to a directory with music files. The user can then inspect the data collected from this directory, be it from tags or from file and directory names or alternatively, the user can provide her own data. After selecting the most suitable source of data, the user proceeds to a final screen where the data is presented in editable form. It's possible to apply certain rules to the data or set attributes wholesale. If the end result is satisfactorally, the user can chose to save the results to filenames and tags.

== MODULES ==
mp3names.py
- contains the main function.

mainwindow.py
- contains the GUI. Most important class for making things work.

ui_files/ui_mainwindow.py
- baseclass for the GUI, generated by Qt Designer.

album_module.py
- Album() the main data class. Most important class for being worked upon.

model_classes.py
- Model() the class for the model/view/controller setup. Takes data from Album for display in th GUI.

tags.py
- Tags() the class to set and get data from tags through Mutagen

utils_module.py
- Utils() ragtag collection of useful functions

rules_module.py
- Rules() gets the rules from a file and delivers a list to the GUI

constants.py config.py
- random stuff

== Screens ==
MainWindow
At start up the user is presented with 3 tabs. The first one ("Directory") is activated and contains a directory view. Here the user can select a directory. Should the directory contain mp3s or flacs, an Album object is instantiated based on the mp3s/flacs in the directory. The user can proceed to the second tab which is initially read-only. 

The second tab ("Data") contains its own tab control with 2 tabs: "Data" and "Free". In the Data tab, the user can select between information gained from the tags from the music files or information retrieved from file names and directory name. Should this not yield any useful data, the user can select the other tab, "Free", which allows for writing. It's possible to paste some parseable data in here to be used further in the program. When sufficient data is found or entered, the user can proceed. Alternatively, the first main tab can be revisited to select a different directory.

The third and final tab, "Final", allows for a last look at the data, editing it and applying rules to it. When satisfied with everything, the data can be used to write tags, change filenames and rename the directory. 


== Album ==
This is the main data class. Changes made by the user should be processed in Album, the data subsequently used again for display. 























