# -*- coding: utf-8 -*-
import sys
import os
import logging
import random

from functools import partial

import PyQt4
from PyQt4.QtCore import *
from PyQt4.QtGui import *

#import testCheckbox



class TCheckBox(QWidget):
    def __init__(self, parent):
        ''' ''' 
        self.log = logging.getLogger('TCheckBox')
        #log = logging.getLogger('%s.__init__' % self.log.name)
        #self.log.debug('__init__ start')
        super(TCheckBox, self).__init__(parent)
        self.parent = parent
        self.setup()
        #self.log.debug('__init__ end')
        return None
    
    def setup(self):
        ''' ''' 
        #log = logging.getLogger('%s.setup' % self.log.name)
        #self.log.debug('setup start')
        hLayout = QHBoxLayout(self)
        self.checkbox = QCheckBox(self.parent)
        hLayout.addWidget(self.checkbox)
        
        vLayout = QVBoxLayout(self)
        vLayout.setAlignment(Qt.AlignRight)
        font = QFont()
        font.setPointSize(8)
        buttonUp = QPushButton(self.parent)
        size = QSize(15, 15)
        buttonUp.setFixedSize(size)
        buttonUp.setToolTip('Move up')
        buttonUp.setFont(font)
        buttonUp.setFlat(True)
        buttonUp.setText(u'\u25B4')
        vLayout.addWidget(buttonUp)
        buttonDown = QPushButton(self.parent)
        buttonDown.setFixedSize(size)
        buttonDown.setToolTip('Move down')
        buttonDown.setFont(font)
        buttonDown.setFlat(True)
        buttonDown.setText(u'\u25BE')
        vLayout.addWidget(buttonDown)
        
        hLayout.addLayout(vLayout)
        
        return None
    
    def setText(self, value):
        ''' ''' 
        #log = logging.getLogger('%s.setText' % self.log.name)
        #self.log.debug('setText start')
        self.checkbox.setText(value)
        #self.log.debug('setText end')
        return None
    
    def setChecked(self, value):
        self.checkbox.setChecked(value)
        return None
    
    def isChecked(self):
        return self.checkbox.isChecked()
    